# === ZSH Configuration by iWas <3 === #


# === POWERLEVEL10K === #
# Instant Prompt
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi
# Prompt Init
autoload -Uz promptinit
promptinit
prompt adam1
setopt histignorealldups sharehistory
# Theme
source /usr/share/custom-zsh/powerlevel10k/powerlevel10k.zsh-theme
# Modules
[[ -f /usr/share/custom-zsh/.p10k.zsh ]] && source /usr/share/custom-zsh/.p10k.zsh


# === ZSH === #
# History
HISTSIZE=1000
SAVEHIST=1000
HISTFILE=/usr/share/custom-zsh/.zsh_history
# Completition System
autoload -Uz compinit
compinit
zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select=2
eval "$(dircolors -b)"
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' menu select=long
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'
# Plugins
source /usr/share/custom-zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source /usr/share/custom-zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
source /usr/share/custom-zsh/zsh-sudo/sudo.plugin.zsh


# === KEYBINDINGS === #
bindkey -e
# Home Key
bindkey "^[[H" beginning-of-line
# End Key
bindkey "^[[F" end-of-line
# Delete Key
bindkey "^[[3~" delete-char
# Moving word-by-word with Alt Key
bindkey "^[[1;3C" forward-word
bindkey "^[[1;3D" backward-word


# === ALIASES === #
# Basic
alias ls='lsd --group-dirs=first'
alias l='lsd -lh --group-dirs=first'
alias ll='lsd -lha --group-dirs=first'
alias cat='bat'
alias icat='kitty +kitten icat'
alias vi='nvim'
alias vim='nvim'
alias gdb='LC_ALL=en.US.UTF-8 gdb'
# Custom


# === FUNCTIONS === #
# Improved man command
man () {
    env \
    LESS_TERMCAP_mb=$'\e[01;31m' \
    LESS_TERMCAP_md=$'\e[01;31m' \
    LESS_TERMCAP_me=$'\e[0m' \
    LESS_TERMCAP_se=$'\e[0m' \
    LESS_TERMCAP_so=$'\e[01;44;33m' \
    LESS_TERMCAP_ue=$'\e[0m' \
    LESS_TERMCAP_us=$'\e[01;32m' \
    man "$@"
}
# Create working directories for pentesting
mkt () { mkdir {nmap,content,exploits}; }
# Extract and show open ports from grepeable nmap capture.
extractPorts () {
	ports="$(cat $1 | grep -oP '\d{1,5}/open' | awk '{print $1}' FS='/' | xargs | tr ' ' ',')"
	ip_address="$(cat $1 | grep -oP '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}' | sort -u | head -n 1)"
	echo -e "\n[*] Extracting information...\n"
	sleep 2
	echo -e "\t[*] IP Address: $ip_address"
	echo -e "\t[*] Open ports: $ports\n"
	echo $ports | tr -d '\n' | xclip -sel clip
	echo -e "[*] Ports copied to clipboard\n"
}
# Delete file securely, avoiding its recovery using forensic procedures.
rmk () { scrub -p dod $1; shred -zun 10 -v $1; }


# === PATH === #
PATH=/root/.local/bin:/snap/bin:/usr/sandbox/:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/usr/share/games:/usr/local/sbin:/usr/sbin:/sbin:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games
# export PATH=$PATH:/home/david/pear/bin


# === END === #
(( ! ${+functions[p10k-instant-prompt-finalize]} )) || p10k-instant-prompt-finalize
